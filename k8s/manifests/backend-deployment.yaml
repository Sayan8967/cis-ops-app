apiVersion: apps/v1
kind: Deployment
metadata:
  name: cis-ops-backend
  namespace: cis-ops
  labels:
    app: cis-ops-backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: cis-ops-backend
  template:
    metadata:
      labels:
        app: cis-ops-backend
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:15-alpine
        command: 
        - sh
        - -c
        - |
          until pg_isready -h postgres-service -p 5432 -U cisops; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done
          echo "PostgreSQL is ready!"
      containers:
      - name: backend
        image: docker.io/sayan896/cis-ops-backend:1986ec85509658f31ee0ea2e16b6b826f9b0567f
        ports:
        - containerPort: 4000
          name: http
        envFrom:
        - configMapRef:
            name: backend-config
        - secretRef:
            name: backend-secret
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 4000
          initialDelaySeconds: 60  # Increased for DB initialization
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health
            port: 4000
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        startupProbe:  # Added startup probe for slow initialization
          httpGet:
            path: /api/health
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
