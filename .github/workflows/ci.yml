name: CI/CD Pipeline

on:
  push:
    branches: [ release ]
  pull_request:
    branches: [ release ]

env:
  # Upstream NGINX Ingress Controller manifest
  INGRESS_YAML: https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml

jobs:

  install-ingress-controller:
    runs-on: ubuntu-latest
    steps:
      - name: Export Kind kubeconfig
        run: |
          kind get kubeconfig --name kind > kubeconfig.yaml

      - name: Install NGINX Ingress Controller
        run: |
          kubectl apply -f $INGRESS_YAML --kubeconfig kubeconfig.yaml

      - name: Wait for Ingress Controller to be ready
        run: |
          kubectl wait \
            --namespace ingress-nginx \
            --for=condition=Ready pods \
            --selector app.kubernetes.io/component=controller \
            --timeout=300s \
            --kubeconfig kubeconfig.yaml

  build-backend:
    needs: install-ingress-controller
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_KEY }}

      - name: Build and push Backend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/cis-ops-backend:latest

  build-frontend:
    needs: install-ingress-controller
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_KEY }}

      - name: Build and push Frontend Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/cis-ops-frontend:latest

  k8s-manifest:
    needs: [build-backend, build-frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Export Kind kubeconfig
        run: |
          kind get kubeconfig --name kind > kubeconfig.yaml

      - name: Apply Kubernetes manifests
        run: |
          kubectl apply -f manifests/ --kubeconfig kubeconfig.yaml

  trivy-scan:
    needs: [build-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Install Trivy and Scan Backend Code
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: fs
          scan-ref: ./backend

